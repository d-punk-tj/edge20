/* You can add global styles to this file, and also import other style files */
//$dialog-position-top: 12vh;

@import url('https://fonts.googleapis.com/css?family=Megrim');
@import url('https://fonts.googleapis.com/css?family=Montserrat');
@import "~ngx-smart-modal/ngx-smart-modal.scss";

*{
  font-family: 'Megrim';
  font-weight: bold;
}

html, body{
  padding: 0;
  margin: 0;
}

a, a:hover{
  text-decoration: none;
  color: #fff;
  cursor: pointer;
}

.nsm-dialog {
  max-width: 5000px;

  .nsm-content {
    background-color: rgba(26, 26, 26, .9);
    color: #fff;
  }
}

.nsm-dialog-btn-close {
  color: #fff;
  font-size: 2em;
}

.nsm-body * {
  font-family: 'Montserrat', sans-serif;
  font-weight: normal;

  h1 {
    text-align: center;
  }

  img {
    max-width: 600px;
    height: auto;
    width: 100%
  }
}

.icon-center {
  display: none;
}

.icon {
  width: 20vh;
  height: 20vh;
  margin-top: 3rem;

  img {
    width: 20vh;
    height: 20vh;
  }
}

#icons {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

.result-div {
  overflow: auto;
}

.content-centered {
  text-align: center;

  * {
    text-align: center;
  }
}

.button {
  display: inline-block;
  font-size: 1.5rem;
  background-color: #ea2528;
  padding: 6px 10px;
  border-radius: 5px;
}

.result-table {
  min-width: 800px;
  width: 100%;
  border-collapse: collapse;

  td {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
    text-align: center;
  }
}

@media (min-width: 768px) {
  .icon-center {
    display: block;
    width: 30vh;
    height: 30vh;
    position: absolute;
    top: 35vh;
    left: calc(50vw - 15vh);
  }

  .icon {
    width: 15vh;
    height: 15vh;
    position: absolute;
    top: 42.5vh;
    margin-top: 0;
    left: calc(50vw - 7.5vh);

    img {
      width: 15vh;
      height: 15vh;
    }
  }

  #icons {
    margin-top: 0;
  }
  
  @mixin deg($d) {
    transform: rotate($d) translate(50vh) rotate(-$d);
  }
  
  .deg0 {
    @include deg(-0deg);
  }

  .deg5 {
    @include deg(-5deg);
  }

  .deg10 {
    @include deg(-10deg);
  }
  
  .deg15 {
    @include deg(-15deg);
  }

  .deg20 {
    @include deg(-20deg);
  }

  .deg25 {
    @include deg(-25deg);
  }
  
  .deg30 {
    @include deg(-30deg);
  }

  .deg35 {
    @include deg(-35deg);
  }

  .deg40 {
    @include deg(-40deg);
  }
  
  .deg45 {
    @include deg(-45deg);
  }

  .deg50 {
    @include deg(-50deg);
  }

  .deg55 {
    @include deg(-55deg);
  }

  .deg60 {
    @include deg(-60deg);
  }

  .deg65 {
    @include deg(-65deg);
  }

  .deg70 {
    @include deg(-70deg);
  }

  .deg75 {
    @include deg(-75deg);
  }

  .deg80 {
    @include deg(-80deg);
  }

  .deg85 {
    @include deg(-85deg);
  }

  .deg90 {
    @include deg(-90deg);
  }

  .deg95 {
    @include deg(-95deg);
  }

  .deg100 {
    @include deg(-100deg);
  }

  .deg105 {
    @include deg(-105deg);
  }

  .deg110 {
    @include deg(-110deg);
  }

  .deg115 {
    @include deg(-115deg);
  }
  
  .deg120 {
    @include deg(-120deg);
  }

  .deg125 {
    @include deg(-125deg);
  }

  .deg130 {
    @include deg(-130deg);
  }
  
  .deg135 {
    @include deg(-135deg);
  }

  .deg140 {
    @include deg(-140deg);
  }

  .deg145 {
    @include deg(-145deg);
  }
  
  .deg150 {
    @include deg(-150deg);
  }

  .deg155 {
    @include deg(-155deg);
  }

  .deg160 {
    @include deg(-160deg);
  }
  
  .deg165 {
    @include deg(-165deg);
  }

  .deg170 {
    @include deg(-170deg);
  }

  .deg175 {
    @include deg(-175deg);
  }
  
  .deg180 {
    @include deg(-180deg);
  }

  .deg185 {
    @include deg(-185deg);
  }

  .deg190 {
    @include deg(-190deg);
  }
  
  .deg195 {
    @include deg(-195deg);
  }

  .deg200 {
    @include deg(-200deg);
  }

  .deg205 {
    @include deg(-205deg);
  }

  .deg210 {
    @include deg(-210deg);
  }

  .deg215 {
    @include deg(-215deg);
  }
  
  .deg220 {
    @include deg(-220deg);
  }
  
  .deg225 {
    @include deg(-225deg);
  }

  .deg230 {
    @include deg(-230deg);
  }

  .deg235 {
    @include deg(-235deg);
  }
  
  .deg240 {
    @include deg(-240deg);
  }

  .deg245 {
    @include deg(-245deg);
  }

  .deg250 {
    @include deg(-250deg);
  }

  .deg255 {
    @include deg(-255deg);
  }

  .deg260 {
    @include deg(-260deg);
  }

  .deg265 {
    @include deg(-265deg);
  }

  .deg270 {
    @include deg(-270deg);
  }

  .deg275 {
    @include deg(-275deg);
  }

  .deg280 {
    @include deg(-280deg);
  }

  .deg285 {
    @include deg(-285deg);
  }

  .deg290 {
    @include deg(-290deg);
  }

  .deg295 {
    @include deg(-295deg);
  }

  .deg300 {
    @include deg(-300deg);
  }

  .deg305 {
    @include deg(-305deg);
  }

  .deg310 {
    @include deg(-310deg);
  }
  
  .deg315 {
    @include deg(-315deg);
  }
  
  .deg320 {
    @include deg(-320deg);
  }

  .deg325 {
    @include deg(-325deg);
  }

  .deg330 {
    @include deg(-330deg);
  }

  .deg335 {
    @include deg(-335deg);
  }

  .deg340 {
    @include deg(-340deg);
  }
  
  .deg345 {
    @include deg(-345deg);
  }

  .deg350 {
    @include deg(-340deg);
  }

  .deg355 {
    @include deg(-355deg);
  }
}

// Loading animation

div.loader {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #1a1a1a;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 100;
  color: #fff;

  p {
    font-family: 'Helvetica', 'Arial', sans-serif;
    margin: 1em 0 0 0;
    font-size: 16px;
  }
}

$color: black;
$size: 100px;
$borderWidth: 4px;
$totalTime: 1.5s;
$redWidth: 27%;
$orangeHeight: 50%;
$whiteWidth: 23%;

div.logo {
  width: $size;
  height: $size;
  box-sizing: border-box;
  position: relative;
  background-color: #1a1a1a;
  &::before,
  &::after {
    z-index: 1;
    box-sizing: border-box;
    content: '';
    position: absolute;
    border: $borderWidth solid transparent;
    width: 0;
    height: 0;
    animation-direction: alternate;
    animation-timing-function: linear;
  }
  &::before {
    top: 0;
    left: 0;
    animation: border-before $totalTime infinite;
    animation-direction: alternate;
  }
  &::after {
    bottom: 0;
    right: 0;
    animation: border-after $totalTime infinite;
    animation-direction: alternate;
  }
  & > div {
    position: absolute;
    opacity: 0;
  }
  div.white {
    border-left: $borderWidth solid $color;
    top: 0;
    bottom: 0;
    right: 0;
    width: 0;
    animation: white $totalTime infinite;
    animation-direction: alternate;
  }
  div.orange {
    border-top: $borderWidth solid $color;
    left: 0;
    bottom: 0;
    right: 0;
    height: 0;
    background-color: #F3B93F;
    animation: orange $totalTime infinite;
    animation-direction: alternate;
  }
  div.red {
    border-right: $borderWidth solid $color;
    top: 0;
    bottom: 0;
    left: 0;
    width: 0;
    background-col$bg: #11111b;
    $red: #ff6778;
    $green: #afd33d;
    $blue: #1122ff;
    $text: $green;
    
    @function font($to, $from, $toWidth, $fromWidth) {
        $slope: ($to - $from) / ($toWidth - $fromWidth);
        $base: $from - $slope * $fromWidth;
        @return calc(#{$base} + #{100vw * $slope});
    }
    @mixin dotgrid($dot: #aaa,$dot-background: #000,$dot-size: 1px,$dot-spacing: 22px) {
        background: linear-gradient(90deg, $dot-background ($dot-spacing - $dot-size), transparent 1%) center, linear-gradient($dot-background ($dot-spacing - $dot-size), transparent 1%) center, $dot;
        background-size: $dot-spacing $dot-spacing;
        background-position: center;
    }
    
    :root {
      box-sizing: border-box;
      cursor: default;
    }
    ::selection {
      color: $bg;
      background-color: lighten($text, 10%);
    }
    html, body {
      width: 100%;
      height: 100%;
      background-color: $bg;
      color: $text;
      font-size: font(22px, 9px, 1920px, 320px);
    }
    .error-body {
      position: absolute;
      width: 95%;
      height: 100%;
      &:before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: $text;
        mix-blend-mode: overlay;
        z-index:1;
      }
      &:after {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        @include dotgrid($dot: lighten($bg, 100%), $dot-background: $bg);
        opacity: .2;
        z-index:1;
      }
      .background {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        filter: grayscale(1);
        mix-blend-mode: luminosity;
      }
      .message {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        z-index:3;
        h1 {
          $faded: rgba($text, .3);
          position: absolute;
          top: 10%;
          left: 0%;
          width: 100%;
          font-size: 10em;
          margin: 0;
          animation: shake 600ms ease-in-out infinite alternate;
          text-shadow: 0 0 .07em $text,
                   -.2em 0 2em $faded,
                    .2em 0 2em $faded;
          user-select: none;
          &:before {
            content: attr(t);
            position: absolute;
            left: 50%;
            transform: translate(-50%, .34em);
            height: .1em;
            line-height: .5em;
            width: 100%;
            animation: scan 500ms ease-in-out infinite alternate random(600)+ms,
              glitch-anim 300ms ease-in-out infinite alternate;
            overflow: hidden;
            opacity: .7;
          }
          &:after {
            $n:random(30);
            content: attr(t);
            position: absolute;
            top: -$n+px;
            left: 50%;
            transform: translate(-50%, .34em);
            height: .5em;
            line-height: .1em;
            width: 100%;
            animation: scan 665ms ease-in-out infinite alternate random(600)+ms,
              glitch-anim 300ms ease-in-out infinite alternate;
            overflow: hidden;
            opacity: .8;
          }
        }
        .bottom {
          position: absolute;
          top: 65%;
          left: 0;
          width: 100%;
        }
        p, a {
          font-size: 2em;
          font-family: monospace;
          text-shadow: 0 0 5px $text;
          filter: blur(.8px);
        }
        a {
          $dd: 225ms;
          
          position: relative;
          color: $text;
          text-decoration: none;
          font-weight: 700;
          border: 2px solid $text;
          text-transform: uppercase;
          padding: 5px 30px;
          box-shadow: inset 0 0 0 0 rgba($text, .2);
          transition: 25ms ease-in-out all 0ms;
          overflow: hidden;
          animation: attn 3s ease-in-out infinite;
          &:hover {
            cursor: crosshair;
            box-shadow: inset 0 -2em 0 0 rgba($text, .2);
            transition: 225ms ease-in-out all $dd;
            animation: none;
            &:before,
            &:after {
              transform: translate(-50%, 0) scale(0, 1);
            }
          }
          &:active {
            box-shadow: inset 0 -2em 0 0 rgba($text, .5);
            transition: 225ms ease-in-out all $dd;
          }
          &:before,
          &:after {
            content: '';
            position: absolute;
            left: 50%;
            transform: translate(-50%, 0) scale(1, 1);
            transform-origin: center;
            background-color: $bg;
            width: 90%;
            height: 5px;
            transition: $dd ease-in-out all;
            mix-blend-mode: hard-light;
          }
          &:before {
            top: -4px;
          }
          &:after$bg: #11111b;
          $red: #ff6778;
          $green: #afd33d;
          $blue: #1122ff;
          $text: $green;
          
          @function font($to, $from, $toWidth, $fromWidth) {
              $slope: ($to - $from) / ($toWidth - $fromWidth);
              $base: $from - $slope * $fromWidth;
              @return calc(#{$base} + #{100vw * $slope});
          }
          @mixin dotgrid($dot: #aaa,$dot-background: #000,$dot-size: 1px,$dot-spacing: 22px) {
              background: linear-gradient(90deg, $dot-background ($dot-spacing - $dot-size), transparent 1%) center, linear-gradient($dot-background ($dot-spacing - $dot-size), transparent 1%) center, $dot;
              background-size: $dot-spacing $dot-spacing;
              background-position: center;
          }
          
          :root {
            box-sizing: border-box;
            cursor: default;
          }
          ::selection {
            color: $bg;
            background-color: lighten($text, 10%);
          }
          html, body {
            width: 100%;
            height: 100%;
            background-color: $bg;
            color: $text;
            font-size: font(22px, 9px, 1920px, 320px);
          }
          .error-body {
            position: absolute;
            width: 95%;
            height: 100%;
            &:before {
              content: '';
              position: fixed;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background-color: $text;
              mix-blend-mode: overlay;
              z-index:1;
            }
            &:after {
              content: '';
              position: fixed;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              @include dotgrid($dot: lighten($bg, 100%), $dot-background: $bg);
              opacity: .2;
              z-index:1;
            }
            .background {
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              z-index: 0;
              filter: grayscale(1);
              mix-blend-mode: luminosity;
            }
            .message {
              position: relative;
              width: 100%;
              height: 100%;
              text-align: center;
              z-index:3;
              h1 {
                $faded: rgba($text, .3);
                position: absolute;
                top: 10%;
                left: 0%;
                width: 100%;
                font-size: 10em;
                margin: 0;
                animation: shake 600ms ease-in-out infinite alternate;
                text-shadow: 0 0 .07em $text,
                         -.2em 0 2em $faded,
                          .2em 0 2em $faded;
                user-select: none;
                &:before {
                  content: attr(t);
                  position: absolute;
                  left: 50%;
                  transform: translate(-50%, .34em);
                  height: .1em;
                  line-height: .5em;
                  width: 100%;
                  animation: scan 500ms ease-in-out infinite alternate random(600)+ms,
                    glitch-anim 300ms ease-in-out infinite alternate;
                  overflow: hidden;
                  opacity: .7;
                }
                &:after {
                  $n:random(30);
                  content: attr(t);
                  position: absolute;
                  top: -$n+px;
                  left: 50%;
                  transform: translate(-50%, .34em);
                  height: .5em;
                  line-height: .1em;
                  width: 100%;
                  animation: scan 665ms ease-in-out infinite alternate random(600)+ms,
                    glitch-anim 300ms ease-in-out infinite alternate;
                  overflow: hidden;
                  opacity: .8;
                }
              }
              .bottom {
                position: absolute;
                top: 65%;
                left: 0;
                width: 100%;
              }
              p, a {
                font-size: 2em;
                font-family: monospace;
                text-shadow: 0 0 5px $text;
                filter: blur(.8px);
              }
              a {
                $dd: 225ms;
                
                position: relative;
                color: $text;
                text-decoration: none;
                font-weight: 700;
                border: 2px solid $text;
                text-transform: uppercase;
                padding: 5px 30px;
                box-shadow: inset 0 0 0 0 rgba($text, .2);
                transition: 25ms ease-in-out all 0ms;
                overflow: hidden;
                animation: attn 3s ease-in-out infinite;
                &:hover {
                  cursor: crosshair;
                  box-shadow: inset 0 -2em 0 0 rgba($text, .2);
                  transition: 225ms ease-in-out all $dd;
                  animation: none;
                  &:before,
                  &:after {
                    transform: translate(-50%, 0) scale(0, 1);
                  }
                }
                &:active {
                  box-shadow: inset 0 -2em 0 0 rgba($text, .5);
                  transition: 225ms ease-in-out all $dd;
                }
                &:before,
                &:after {
                  content: '';
                  position: absolute;
                  left: 50%;
                  transform: translate(-50%, 0) scale(1, 1);
                  transform-origin: center;
                  background-color: $bg;
                  width: 90%;
                  height: 5px;
                  transition: $dd ease-in-out all;
                  mix-blend-mode: hard-light;
                }
                &:before {
                  top: -4px;
                }
                &:after {
                  bottom: -4px;
                }
              }
            }
          }
          
          @keyframes scan {
            $num: random(30);
            $numVal: $num * .01em;
            from , 20%, 100%{
              height: 0;		
              transform: translate(-50%, .44em);
            }
            10%,1$bg: #11111b;
            $red: #ff6778;
            $green: #afd33d;
            $blue: #1122ff;
            $text: $green;
            
            @function font($to, $from, $toWidth, $fromWidth) {
                $slope: ($to - $from) / ($toWidth - $fromWidth);
                $base: $from - $slope * $fromWidth;
                @return calc(#{$base} + #{100vw * $slope});
            }
            @mixin dotgrid($dot: #aaa,$dot-background: #000,$dot-size: 1px,$dot-spacing: 22px) {
                background: linear-gradient(90deg, $dot-background ($dot-spacing - $dot-size), transparent 1%) center, linear-gradient($dot-background ($dot-spacing - $dot-size), transparent 1%) center, $dot;
                background-size: $dot-spacing $dot-spacing;
                background-position: center;
            }
            
            :root {
              box-sizing: border-box;
              cursor: default;
            }
            ::selection {
              color: $bg;
              background-color: lighten($text, 10%);
            }
            html, body {
              width: 100%;
              height: 100%;
              background-color: $bg;
              color: $text;
              font-size: font(22px, 9px, 1920px, 320px);
            }
            .error-body {
              position: absolute;
              width: 95%;
              height: 100%;
              &:before {
                content: '';
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: $text;
                mix-blend-mode: overlay;
                z-index:1;
              }
              &:after {
                content: '';
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                @include dotgrid($dot: lighten($bg, 100%), $dot-background: $bg);
                opacity: .2;
                z-index:1;
              }
              .background {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 0;
                filter: grayscale(1);
                mix-blend-mode: luminosity;
              }
              .message {
                position: relative;
                width: 100%;
                height: 100%;
                text-align: center;
                z-index:3;
                h1 {
                  $faded: rgba($text, .3);
                  position: absolute;
                  top: 10%;
                  left: 0%;
                  width: 100%;
                  font-size: 10em;
                  margin: 0;
                  animation: shake 600ms ease-in-out infinite alternate;
                  text-shadow: 0 0 .07em $text,
                           -.2em 0 2em $faded,
                            .2em 0 2em $faded;
                  user-select: none;
                  &:before {
                    content: attr(t);
                    position: absolute;
                    left: 50%;
                    transform: translate(-50%, .34em);
                    height: .1em;
                    line-height: .5em;
                    width: 100%;
                    animation: scan 500ms ease-in-out infinite alternate random(600)+ms,
                      glitch-anim 300ms ease-in-out infinite alternate;
                    overflow: hidden;
                    opacity: .7;
                  }
                  &:after {
                    $n:random(30);
                    content: attr(t);
                    position: absolute;
                    top: -$n+px;
                    left: 50%;
                    transform: translate(-50%, .34em);
                    height: .5em;
                    line-height: .1em;
                    width: 100%;
                    animation: scan 665ms ease-in-out infinite alternate random(600)+ms,
                      glitch-anim 300ms ease-in-out infinite alternate;
                    overflow: hidden;
                    opacity: .8;
                  }
                }
                .bottom {
                  position: absolute;
                  top: 65%;
                  left: 0;
                  width: 100%;
                }
                p, a {
                  font-size: 2em;
                  font-family: monospace;
                  text-shadow: 0 0 5px $text;
                  filter: blur(.8px);
                }
                a {
                  $dd: 225ms;
                  
                  position: relative;
                  color: $text;
                  text-decoration: none;
                  font-weight: 700;
                  border: 2px solid $text;
                  text-transform: uppercase;
                  padding: 5px 30px;
                  box-shadow: inset 0 0 0 0 rgba($text, .2);
                  transition: 25ms ease-in-out all 0ms;
                  overflow: hidden;
                  animation: attn 3s ease-in-out infinite;
                  &:hover {
                    cursor: crosshair;
                    box-shadow: inset 0 -2em 0 0 rgba($text, .2);
                    transition: 225ms ease-in-out all $dd;
                    animation: none;
                    &:before,
                    &:after {
                      transform: translate(-50%, 0) scale(0, 1);
                    }
                  }
                  &:active {
                    box-shadow: inset 0 -2em 0 0 rgba($text, .5);
                    transition: 225ms ease-in-out all $dd;
                  }
                  &:before,
                  &:after {
                    content: '';
                    position: absolute;
                    left: 50%;
                    transform: translate(-50%, 0) scale(1, 1);
                    transform-origin: center;
                    background-color: $bg;
                    width: 90%;
                    height: 5px;
                    transition: $dd ease-in-out all;
                    mix-blend-mode: hard-light;
                  }
                  &:before {
                    top: -4px;
                  }
                  &:after {
                    bottom: -4px;
                  }
                }
              }
            }
            
            @keyframes scan {
              $num: random(30);
              $numVal: $num * .01em;
              from , 20%, 100%{
                height: 0;		
                transform: translate(-50%, .44em);
              }
              10%,15% {
                height: 1em;
                line-height: .2em;
                transform: translate(-55%, $numVal);
              }
            }
            @keyframe pulse {
              $faded: rgba($text, .3);
              from {
                text-shadow: 0 0 0 $text,
                             0 0 0 $faded,
                             0 0 0 $faded;
              }
              to {
                text-shadow: 0 0 .07em $text,
                           -.2em 0 2em $faded,
                            .2em 0 2em $faded;
              }
            }
            @keyframes attn {
              0%, 100% {
                opacity: 1;
              }
              30%, 35% {
                opacity: .4;
              }
            }
            @keyframes shake {
              0%, 100% {
                transform: translate(-1px, 0);
              }
              10% {
                transform: translate(2px, 1px);
              }
              30% {
                transform: translate(-3px, 2px);
              }
              35% {
                transform: translate(2px, -3px);
                filter: blur(4px);
              }
              45% {
                transform: translate(2px, 2px) skewY(-8deg) scale( .96, 1);
                filter: blur(0);
              }
              50% {
                transform: translate(-3px, 1px);
              }
            }
            @keyframes glitch-anim {
              $steps: 10;
              @for $i from 0 through $steps {
                #{percentage($i*(1/$steps))} {
                  clip: rect(random(100)+px, 9999px, random(100)+px, 0);
                }
              }
            }5% {
              height: 1em;
              line-height: .2em;
              transform: translate(-55%, $numVal);
            }
          }
          @keyframe pulse {
            $faded: rgba($text, .3);
            from {
              text-shadow: 0 0 0 $text,
                           0 0 0 $faded,
                           0 0 0 $faded;
            }
            to {
              text-shadow: 0 0 .07em $text,
                         -.2em 0 2em $faded,
                          .2em 0 2em $faded;
            }
          }
          @keyframes attn {
            0%, 100% {
              opacity: 1;
            }
            30%, 35% {
              opacity: .4;
            }
          }
          @keyframes shake {
            0%, 100% {
              transform: translate(-1px, 0);
            }
            10% {
              transform: translate(2px, 1px);
            }
            30% {
              transform: translate(-3px, 2px);
            }
            35% {
              transform: translate(2px, -3px);
              filter: blur(4px);
            }
            45% {
              transform: translate(2px, 2px) skewY(-8deg) scale( .96, 1);
              filter: blur(0);
            }
            50% {
              transform: translate(-3px, 1px);
            }
          }
          @keyframes glitch-anim {
            $steps: 10;
            @for $i from 0 through $steps {
              #{percentage($i*(1/$steps))} {
                clip: rect(random(100)+px, 9999px, random(100)+px, 0);
              }
            }
          } {
            bottom: -4px;
          }
        }
      }
    }
    
    @keyframes scan {
      $num: random(30);
      $numVal: $num * .01em;
      from , 20%, 100%{
        height: 0;		
        transform: translate(-50%, .44em);
      }
      10%,15% {
        height: 1em;
        line-height: .2em;
        transform: translate(-55%, $numVal);
      }
    }
    @keyframe pulse {
      $faded: rgba($text, .3);
      from {
        text-shadow: 0 0 0 $text,
                     0 0 0 $faded,
                     0 0 0 $faded;
      }
      to {
        text-shadow: 0 0 .07em $text,
                   -.2em 0 2em $faded,
                    .2em 0 2em $faded;
      }
    }
    @keyframes attn {
      0%, 100% {
        opacity: 1;
      }
      30%, 35% {
        opacity: .4;
      }
    }
    @keyframes shake {
      0%, 100% {
        transform: translate(-1px, 0);
      }
      10% {
        transform: translate(2px, 1px);
      }
      30% {
        transform: translate(-3px, 2px);
      }
      35% {
        transform: translate(2px, -3px);
        filter: blur(4px);
      }
      45% {
        transform: translate(2px, 2px) skewY(-8deg) scale( .96, 1);
        filter: blur(0);
      }
      50% {
        transform: translate(-3px, 1px);
      }
    }
    @keyframes glitch-anim {
      $steps: 10;
      @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
          clip: rect(random(100)+px, 9999px, random(100)+px, 0);
        }
      }
    }or: #EA5664;
    animation: red $totalTime infinite;
    animation-direction: alternate;
  }
}

@keyframes border-before {
  0% {
    width: 0;
    height: 0;
    border-top-color: $color;
    border-right-color: transparent;
  }
  12.49% {
    border-right-color: transparent;
  }
  12.5% {
    height: 0;
    width: 100%;
    border-top-color: $color;
    border-right-color: $color;
  }
  25%,
  100% {
    width: 100%;
    height: 100%;
    border-top-color: $color;
    border-right-color: $color;
  }
}

@keyframes border-after {
  0%,
  24.99% {
    width: 0;
    height: 0;
    border-left-color: transparent;
    border-bottom-color: transparent;
  }
  25% {
    width: 0;
    height: 0;
    border-left-color: transparent;
    border-bottom-color: $color;
  }
  37.49% {
    border-left-color: transparent;
    border-bottom-color: $color;
  }
  37.5% {
    height: 0;
    width: 100%;
    border-left-color: $color;
    border-bottom-color: $color;
  }
  50%,
  100% {
    width: 100%;
    height: 100%;
    border-left-color: $color;
    border-bottom-color: $color;
  }
}

@keyframes red {
  0%,
  50% {
    width: 0;
    opacity: 0;
  }
  50.01% {
    opacity: 1;
  }
  65%,
  100% {
    opacity: 1;
    width: $redWidth;
  }
}

@keyframes orange {
  0%,
  65% {
    height: 0;
    opacity: 0;
  }
  65.01% {
    opacity: 1;
  }
  80%,
  100% {
    opacity: 1;
    height: $orangeHeight;
  }
}

@keyframes white {
  0%,
  75% {
    width: 0;
    opacity: 0;
  }
  75.01% {
    opacity: 1;
  }
  90%,
  100% {
    opacity: 1;
    width: $whiteWidth;
  }
}

$bg: #11111b;
$red: #ff6778;
$green: #afd33d;
$blue: #1122ff;
$text: $green;

@function font($to, $from, $toWidth, $fromWidth) {
    $slope: ($to - $from) / ($toWidth - $fromWidth);
    $base: $from - $slope * $fromWidth;
    @return calc(#{$base} + #{100vw * $slope});
}
@mixin dotgrid($dot: #aaa,$dot-background: #000,$dot-size: 1px,$dot-spacing: 22px) {
    background: linear-gradient(90deg, $dot-background ($dot-spacing - $dot-size), transparent 1%) center, linear-gradient($dot-background ($dot-spacing - $dot-size), transparent 1%) center, $dot;
    background-size: $dot-spacing $dot-spacing;
    background-position: center;
}

:root {
	box-sizing: border-box;
	cursor: default;
}
::selection {
	color: $bg;
	background-color: lighten($text, 10%);
}
html, body {
	width: 100%;
	height: 100%;
	background-color: $bg;
	color: $text;
	font-size: font(22px, 9px, 1920px, 320px);
}
.error-body {
	position: absolute;
	width: 95%;
	height: 100%;
	&:before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: $text;
		mix-blend-mode: overlay;
		z-index:1;
	}
	&:after {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		@include dotgrid($dot: lighten($bg, 100%), $dot-background: $bg);
		opacity: .2;
		z-index:1;
	}
	.background {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 0;
		filter: grayscale(1);
		mix-blend-mode: luminosity;
	}
	.message {
		position: relative;
		width: 100%;
		height: 100%;
		text-align: center;
		z-index:3;
		h1 {
			$faded: rgba($text, .3);
			position: absolute;
			top: 10%;
			left: 0%;
			width: 100%;
			font-size: 10em;
			margin: 0;
			animation: shake 600ms ease-in-out infinite alternate;
			text-shadow: 0 0 .07em $text,
			         -.2em 0 2em $faded,
								.2em 0 2em $faded;
			user-select: none;
			&:before {
				content: attr(t);
				position: absolute;
				left: 50%;
				transform: translate(-50%, .34em);
				height: .1em;
				line-height: .5em;
				width: 100%;
				animation: scan 500ms ease-in-out infinite alternate random(600)+ms,
					glitch-anim 300ms ease-in-out infinite alternate;
				overflow: hidden;
				opacity: .7;
			}
			&:after {
				$n:random(30);
				content: attr(t);
				position: absolute;
				top: -$n+px;
				left: 50%;
				transform: translate(-50%, .34em);
				height: .5em;
				line-height: .1em;
				width: 100%;
				animation: scan 665ms ease-in-out infinite alternate random(600)+ms,
					glitch-anim 300ms ease-in-out infinite alternate;
				overflow: hidden;
				opacity: .8;
			}
		}
		.bottom {
			position: absolute;
			top: 65%;
			left: 0;
			width: 100%;
		}
		p, a {
			font-size: 2em;
			font-family: monospace;
			text-shadow: 0 0 5px $text;
			filter: blur(.8px);
		}
		a {
			$dd: 225ms;
			
			position: relative;
			color: $text;
			text-decoration: none;
			font-weight: 700;
			border: 2px solid $text;
			text-transform: uppercase;
			padding: 5px 30px;
			box-shadow: inset 0 0 0 0 rgba($text, .2);
			transition: 25ms ease-in-out all 0ms;
			overflow: hidden;
			animation: attn 3s ease-in-out infinite;
			&:hover {
				cursor: crosshair;
				box-shadow: inset 0 -2em 0 0 rgba($text, .2);
				transition: 225ms ease-in-out all $dd;
				animation: none;
				&:before,
				&:after {
					transform: translate(-50%, 0) scale(0, 1);
				}
			}
			&:active {
				box-shadow: inset 0 -2em 0 0 rgba($text, .5);
				transition: 225ms ease-in-out all $dd;
			}
			&:before,
			&:after {
				content: '';
				position: absolute;
				left: 50%;
				transform: translate(-50%, 0) scale(1, 1);
				transform-origin: center;
				background-color: $bg;
				width: 90%;
				height: 5px;
				transition: $dd ease-in-out all;
				mix-blend-mode: hard-light;
			}
			&:before {
				top: -4px;
			}
			&:after {
				bottom: -4px;
			}
		}
	}
}

@keyframes scan {
	$num: random(30);
	$numVal: $num * .01em;
	from , 20%, 100%{
		height: 0;		
		transform: translate(-50%, .44em);
	}
	10%,15% {
		height: 1em;
		line-height: .2em;
		transform: translate(-55%, $numVal);
	}
}
@keyframe pulse {
	$faded: rgba($text, .3);
	from {
		text-shadow: 0 0 0 $text,
								 0 0 0 $faded,
								 0 0 0 $faded;
	}
	to {
		text-shadow: 0 0 .07em $text,
			         -.2em 0 2em $faded,
								.2em 0 2em $faded;
	}
}
@keyframes attn {
	0%, 100% {
		opacity: 1;
	}
	30%, 35% {
		opacity: .4;
	}
}
@keyframes shake {
	0%, 100% {
		transform: translate(-1px, 0);
	}
	10% {
		transform: translate(2px, 1px);
	}
	30% {
		transform: translate(-3px, 2px);
	}
	35% {
		transform: translate(2px, -3px);
		filter: blur(4px);
	}
	45% {
		transform: translate(2px, 2px) skewY(-8deg) scale( .96, 1);
		filter: blur(0);
	}
	50% {
		transform: translate(-3px, 1px);
	}
}
@keyframes glitch-anim {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}